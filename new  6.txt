The entire process starts from an HTTP request:

1) After the HTTP request comes in, server will find the corresponding processor mapping(HandlerMapping) according to the configuration file and provide the specific proceesor(Handler) according to mapping rules.
2) The server then call the corresponding method, handle the request and then pass data of ModelAndView type to the specific DispatherServlet, which contains view of process result and data used in view.
3) According to the view object in ModelAndView, DispatcherServlet will find a suitable view resolver(ViewResolver) and pass the data to special view for display. Finally, servlet constructs an HTTP response for the browser.

DispatcherServlet is the core of Spring MVC. It is responsible for the organization and coordination of the various components of the Spring MVC. Its top 3 major jobs:
1) intercept the specific format of the URL request.
2) initialize the corresponding WebApplicationContext of DispatcherServlet context, and associate WebApplicationContext of business layer with WebApplicationContext of persistence layer.
3) initialize the components of the Spring MVC components, and assembly to the DispatcherServlet.
